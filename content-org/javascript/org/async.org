#+TITLE: 异步
#+DATE:<2022-06-03 Fri 15:45>
#+FILETAGS: async @js

* Reactor Pattern

* 异步的底层原理

操作系统的 api

* Callback

* Generator

被调用时返回一个 generator 对象，函数体不会立即执行, 通过 generator 对象控制函数体的执行

#+begin_src js
function* f()
function *g()
function * h()

// 三种声明方式都可以， 第一种比较好
// as the star * denotes that it’s a generator function, it describes the kind, not the name, so it should stick with the function keyword
#+end_src

* Promise

* Async/Await

top level await 可以在 module 的顶层使用

Any modules that include this will wait for the fetch to resolve before running any code

Other microtasks can execute before the async function resumes

await literally suspends the function execution until the promise settles, and then resumes it with the promise result. That doesn’t cost any CPU resources, because the JavaScript engine can do other jobs in the meantime: execute other scripts, handle events, etc

* Observable

* IO

网络请求，文件读写

同步io：应用初始化的时候读配置文件用，否则不建议使用同步 io，阻塞 eventloop，影响性能

* queueMicrotask

ecma-262 标准方法，用于注册微任务

* process.nextTick[fn:1]

任务队列，被 node 管理，仅在 node 环境支持

优先级高于微任务
* 并发
* 并行
* Worker Threads

* setImmediate

非标准方法，不推荐使用，仅在 node 环境支持

宏任务，在 poll phase 阶段后执行

* Event Loop

等待任务，执行任务，继续等待任务（等待期基本不消耗 cpu 资源）

node 环境跟 browser 环境的 event loop 表现不一致

** Browser event loop

使用 libevent 来实现，单队列

[[file:eventloop.svg]]

** Node event loop[fn:2]
多阶段，每阶段一个队列
使用 libuv 来实现
分不同的阶段 phase，每个阶段可以理解成一个队列
Node 11.0.0 修复了微任务的 bug
四个 phase (队列）
expired timer callbacks
i/o events
immediate queues
close handler
中间队列
process.nextTick/promise 微任务

[[file:eventloop-node.png]]

** Event Loop 最佳实践


** 事件的区别
浏览器事件：用户交互，脚本加载等，
服务端事件：文件 i/o，网络 i/o，

| 环境 | browser | node |
| --- | --- | --- |
| 实现库 | libevent | libuv |


** libuv

Network I/O is not performed on the libuv thread pool

File I/O在 libuv thread pool 里执行

dns.lookup() 在 libuv 线程池里执行

[[file:libuv.png]]

** libuv 线程池

** 微任务

v8 术语，由引擎管理的任务队列

.then/.catch/.finally  queueMicrotask 注册的均为微任务

当前宏任务执行完后，引擎会执行微任务，优先级高于宏任务

** 宏任务

v8 术语

例如：脚本加载事件，页面交互事件

执行宏任务时，浏览器不会渲染

** Node架构

[[file:node-arch.png]]


[fn:1] [[https://stackoverflow.com/questions/55467033/difference-between-process-nexttick-and-queuemicrotask][process-nexttick-and-queuemicrotask]]
[fn:2] [[https://blog.insiderattack.net/event-loop-and-the-big-picture-nodejs-event-loop-part-1-1cb67a182810][nodejs-event-loop]]
