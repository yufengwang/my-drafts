#+TITLE: Webpack
#+DATE: <2022-05-28 Sat 21:52>
#+FILETAGS: webpack

* 工作过程

1. 根据入口文件构建依赖图
2. 处理依赖图里的所有资源
3. 生成 js bundle，清单文件

* Loader

* Plugin

- SplitChunksPlugin
- DllPlugin

  拆包，用于提高构建速度

  创建一个 manifest.json 文件，被 DllReferencePlugin 使用，作于依赖映射

 #+begin_quote
 The term "DLL" stands for Dynamic-link library which was originally introduced by Microsoft
 #+end_quote

- DllReferencePlugin

  引用 dll 包， require 预构建的依赖

  DllReferencePlugin and DllPlugin 在不同的 webpack 配置中使用

* 代码分割

基于入口的代码分割

* Webpack5

* 配置优化


* 常见资源处理

- Typescript

  babel-loader 加上 @babel/preset-typescript 规则集

  缺点： 无类型校验

 #+begin_src js
module.exports = {
  /* ... */
  module: {
    rules: [
      {
        test: /\.ts$/,
        use: [
          {
            loader: 'babel-loader',
            options: {
              presets: ['@babel/preset-typescript'],
            },
          },
        ],
      },
    ],
  },
};
 #+end_src

 - CSS
   css-loader 让 Webpack 能够正确理解 CSS 代码、分析资源依赖；style-loader、mini-css-extract-plugin 则通过适当方式将 CSS 插入到页面，对页面样式产生影响
